{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/util.js","webpack:///./lib/bullet.js","webpack:///./lib/moving_object.js","webpack:///./lib/ship.js","webpack:///./lib/game_view.js","webpack:///./lib/asteroid.js","webpack:///./lib/game.js","webpack:///./lib/asteroids.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Util","[object Object]","vec","norm","scale","dist","pos1","pos2","Math","sqrt","pow","length","deg","PI","random","sin","cos","wrap","coord","max","MovingObject","Bullet","options","radius","RADIUS","super","this","isWrappable","SPEED","NORMAL_FRAME_TIME_DELTA","pos","vel","color","game","otherObject","ctx","fillStyle","beginPath","arc","fill","timeDelta","velocityScale","offsetX","offsetY","isOutOfBounds","remove","Ship","floor","randomColor","relVel","dir","bulletVel","bullet","add","impulse","randomPosition","GameView","ship","addShip","keys","MOVES","forEach","k","move","key","power","fireBullet","bindKeyHandlers","lastTime","requestAnimationFrame","animate","bind","time","step","draw","w","a","DEFAULTS","COLOR","randomVec","relocate","Asteroid","Game","asteroids","bullets","ships","addAsteroids","push","Error","NUM_ASTEROIDS","concat","allObjects","j","obj1","obj2","isCollidedWith","collideWith","clearRect","DIM_X","DIM_Y","BG_COLOR","fillRect","delta","splice","indexOf","moveObjects","checkCollisions","FPS","document","addEventListener","canvasEl","getElementsByTagName","width","height","getContext","start"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","const Util = {\n  // Normalize the length of the vector to 1, maintaining direction.\n  dir(vec) {\n    const norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n  // Find distance between two points.\n  dist(pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n  // Find the length of the vector.\n  norm(vec) {\n    return Util.dist([0, 0], vec);\n  },\n  // Return a randomly oriented vector with the given length.\n  randomVec(length) {\n    const deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n  // Scale the length of a vector by the given amount.\n  scale(vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n\n  wrap(coord, max) {\n    if (coord < 0) {\n      return max - (coord % max);\n    } else if (coord > max) {\n      return coord % max;\n    } else {\n      return coord;\n    }\n  }\n};\n\nmodule.exports = Util;\n","const MovingObject = require(\"./moving_object\");\n\nclass Bullet extends MovingObject {\n  constructor(options) {\n    options.radius = Bullet.RADIUS;\n    super(options);\n    this.isWrappable = false;\n  }\n}\n\nBullet.RADIUS = 2;\nBullet.SPEED = 15;\n\nmodule.exports = Bullet;\n","const Util = require(\"./util\");\n\nclass MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.radius = options.radius;\n    this.color = options.color;\n    this.game = options.game;\n    this.isWrappable = true;\n  }\n\n  collideWith(otherObject) {\n    // default do nothing\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();\n  }\n\n  isCollidedWith(otherObject) {\n    const centerDist = Util.dist(this.pos, otherObject.pos);\n    return centerDist < (this.radius + otherObject.radius);\n  }\n\n  move(timeDelta) {\n    // timeDelta is number of milliseconds since last move\n    // if the computer is busy the time delta will be larger\n    // in this case the MovingObject should move farther in this frame\n    // velocity of object is how far it should move in 1/60th of a second\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\n        offsetX = this.vel[0] * velocityScale,\n        offsetY = this.vel[1] * velocityScale;\n\n    this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n\n    if (this.game.isOutOfBounds(this.pos)) {\n      if (this.isWrappable) {\n        this.pos = this.game.wrap(this.pos);\n      } else {\n        this.remove();\n      }\n    }\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000 / 60;\n\nmodule.exports = MovingObject;\n","const MovingObject = require(\"./moving_object\");\nconst Bullet = require(\"./bullet\");\nconst Util = require(\"./util\");\n\nfunction randomColor() {\n  const hexDigits = \"0123456789ABCDEF\";\n\n  let color = \"#\";\n  for (let i = 0; i < 3; i++) {\n    color += hexDigits[Math.floor((Math.random() * 16))];\n  }\n\n  return color;\n}\n\nclass Ship extends MovingObject {\n  constructor(options) {\n    options.radius = Ship.RADIUS;\n    options.vel = options.vel || [0, 0];\n    options.color = options.color || randomColor();\n    super(options);\n  }\n\n  fireBullet() {\n    const norm = Util.norm(this.vel);\n\n    if (norm === 0) {\n      // Can't fire unless moving.\n      return;\n    }\n\n    const relVel = Util.scale(\n      Util.dir(this.vel),\n      Bullet.SPEED\n    );\n\n    const bulletVel = [\n      relVel[0] + this.vel[0], relVel[1] + this.vel[1]\n    ];\n\n    const bullet = new Bullet({\n      pos: this.pos,\n      vel: bulletVel,\n      color: this.color,\n      game: this.game\n    });\n\n    this.game.add(bullet);\n  }\n\n  power(impulse) {\n    this.vel[0] += impulse[0];\n    this.vel[1] += impulse[1];\n  }\n\n  relocate() {\n    this.pos = this.game.randomPosition();\n    this.vel = [0, 0];\n  }\n}\n\nShip.RADIUS = 15;\nmodule.exports = Ship;\n","class GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.ship = this.game.addShip();\n  }\n\n  bindKeyHandlers() {\n    const ship = this.ship;\n\n    Object.keys(GameView.MOVES).forEach((k) => {\n      const move = GameView.MOVES[k];\n      key(k, () => { ship.power(move); });\n    });\n\n    key(\"space\", () => { ship.fireBullet(); });\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n    // start the animation\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n\n    this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.lastTime = time;\n\n    // every call to animate requests causes another call to animate\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nGameView.MOVES = {\n  w: [0, -1],\n  a: [-1, 0],\n  s: [0, 1],\n  d: [1, 0],\n};\n\nmodule.exports = GameView;\n","const Util = require(\"./util\");\nconst MovingObject = require(\"./moving_object\");\nconst Ship = require(\"./ship\");\nconst Bullet = require(\"./bullet\");\n\nconst DEFAULTS = {\n  COLOR: \"#505050\",\n  RADIUS: 25,\n  SPEED: 4\n};\n\nclass Asteroid extends MovingObject {\n  constructor(options = {}) {\n    options.color = DEFAULTS.COLOR;\n    options.pos = options.pos || options.game.randomPosition();\n    options.radius = DEFAULTS.RADIUS;\n    options.vel = options.vel || Util.randomVec(DEFAULTS.SPEED);\n    super(options);\n  }\n\n  collideWith(otherObject) {\n    if (otherObject instanceof Ship) {\n      otherObject.relocate();\n      return true;\n    } else if (otherObject instanceof Bullet) {\n      this.remove();\n      otherObject.remove();\n      return true;\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Asteroid;\n","const Asteroid = require(\"./asteroid\");\nconst Bullet = require(\"./bullet\");\nconst Ship = require(\"./ship\");\nconst Util = require(\"./util\");\n\nclass Game {\n  constructor() {\n    this.asteroids = [];\n    this.bullets = [];\n    this.ships = [];\n\n    this.addAsteroids();\n  }\n\n  add(object) {\n    if (object instanceof Asteroid) {\n      this.asteroids.push(object);\n    } else if (object instanceof Bullet) {\n      this.bullets.push(object);\n    } else if (object instanceof Ship) {\n      this.ships.push(object);\n    } else {\n      throw new Error(\"unknown type of object\");\n    }\n  }\n\n  addAsteroids() {\n    for (let i = 0; i < Game.NUM_ASTEROIDS; i++) {\n      this.add(new Asteroid({ game: this }));\n    }\n  }\n\n  addShip() {\n    const ship = new Ship({\n      pos: this.randomPosition(),\n      game: this\n    });\n\n    this.add(ship);\n\n    return ship;\n  }\n\n  allObjects() {\n    return [].concat(this.ships, this.asteroids, this.bullets);\n  }\n\n  checkCollisions() {\n    const allObjects = this.allObjects();\n    for (let i = 0; i < allObjects.length; i++) {\n      for (let j = 0; j < allObjects.length; j++) {\n        const obj1 = allObjects[i];\n        const obj2 = allObjects[j];\n\n        if (obj1.isCollidedWith(obj2)) {\n          const collision = obj1.collideWith(obj2);\n          if (collision) return;\n        }\n      }\n    }\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    ctx.fillStyle = Game.BG_COLOR;\n    ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n    this.allObjects().forEach((object) => {\n      object.draw(ctx);\n    });\n  }\n\n  isOutOfBounds(pos) {\n    return (pos[0] < 0) || (pos[1] < 0) ||\n      (pos[0] > Game.DIM_X) || (pos[1] > Game.DIM_Y);\n  }\n\n  moveObjects(delta) {\n    this.allObjects().forEach((object) => {\n      object.move(delta);\n    });\n  }\n\n  randomPosition() {\n    return [\n      Game.DIM_X * Math.random(),\n      Game.DIM_Y * Math.random()\n    ];\n  }\n\n  remove(object) {\n    if (object instanceof Bullet) {\n      this.bullets.splice(this.bullets.indexOf(object), 1);\n    } else if (object instanceof Asteroid) {\n      this.asteroids.splice(this.asteroids.indexOf(object), 1);\n    } else if (object instanceof Ship) {\n      this.ships.splice(this.ships.indexOf(object), 1);\n    } else {\n      throw new Error(\"unknown type of object\");\n    }\n  }\n\n  step(delta) {\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  wrap(pos) {\n    return [\n      Util.wrap(pos[0], Game.DIM_X), Util.wrap(pos[1], Game.DIM_Y)\n    ];\n  }\n}\n\nGame.BG_COLOR = \"#000000\";\nGame.DIM_X = 1000;\nGame.DIM_Y = 600;\nGame.FPS = 32;\nGame.NUM_ASTEROIDS = 10;\n\nmodule.exports = Game;\n","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n});\n"],"sourceRoot":""}